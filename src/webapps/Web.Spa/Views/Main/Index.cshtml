@inject Microsoft.AspNetCore.SpaServices.Prerendering.ISpaPrerenderer prerenderer

@using Microsoft.AspNetCore.Html;

@model WebSpa.TypeScript.Infrastructure.WebSessionContext

@{
    Layout = null;

    var prerenderResult = await prerenderer.RenderToString("ClientApp/dist/main-server", customDataParameter: Model);
    var isomorphicSessionDataJson = prerenderResult?.Globals?["session"]["isomorphic"]?.ToString();
    var initialReduxStateJson = prerenderResult?.Globals?["initialReduxState"]?.ToString();
    var completedTasksJson = prerenderResult?.Globals?["completedTasks"]?.ToString();
    var helmetStringsPrerender = prerenderResult?.Globals?["helmetStrings"]?.ToString();

    if (prerenderResult.StatusCode.HasValue)
    {
        Context.Response.StatusCode = prerenderResult?.StatusCode ?? 200;
    }
}
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://ogp.me/ns/fb#" xmlns:og="http://ogp.me/ns#" lang="en">
<head>
    <meta charset="UTF-8">

    @* @Html.Raw(helmetStringsPrerender) *@

    @(new HtmlString(helmetStringsPrerender))


    <meta name="author" content="Bc. Patrik Duch, e-mail: duchpatrik@icloud.com"/>
    <meta name="robots" content="index, follow"/>
    <meta property="og:title" content="E-commerce React-Redux Template by Patrik Duch" />
    <meta name="revisit-after" content="2 days"/>
    <meta name="description" content="E-commerce React-Redux Template based on cloud providers AWS and MS Azure."/>
    <meta name="keywords" content="ReactJS, Patrik Duch, MS Azure, AWS, NetCore, Redux, E-commerce, Isomorphic app,"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <title>E-commerce React-Redux Template by Patrik Duch</title>

    <link rel="stylesheet" href="~/dist/vendor.css" asp-append-version="true" />
    @*

    <link rel="preconnect" href="https://fonts.gstatic.com"> 
    <link href="https://fonts.googleapis.com/css2?family=Lexend:wght@100&display=swap" rel="stylesheet">    
    *@



    <link rel="preconnect" href="https://fonts.gstatic.com"> 
    <link href="https://fonts.googleapis.com/css2?family=Lexend:wght@100;300&display=swap" rel="stylesheet">



    @if (!AppSettings.Default.IsDevelopment)
    {
<link rel="stylesheet" href="~/dist/site.css" asp-append-version="true" />}

<script>
        window.session = @Html.Raw(string.IsNullOrEmpty(isomorphicSessionDataJson) ? "null" : isomorphicSessionDataJson);
        window.initialReduxState = >@(new HtmlString(initialReduxStateJson));
        window.completedTasks = >@(new HtmlString(completedTasksJson));
</script>
</head>
<body>

    @* Save the request token in a div. CORS needs to make sure this token can't be read by javascript from other sources than ours *@
    <div id="xsrf-token" data-xsrf-token="@ViewBag.AntiForgeryRequestToken"></div>
    <div id="access-token" data-access-token="@ViewBag.accessToken"></div>

    <div id="react-app">@(new HtmlString(prerenderResult?.Html))</div>

    <script src="~/dist/vendor.js" asp-append-version="true"></script>
    <script src="~/dist/main-client.js" asp-append-version="true"></script>

</body>
</html>