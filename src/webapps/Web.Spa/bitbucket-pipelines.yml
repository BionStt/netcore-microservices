image: python:3.7.4-alpine3.10
options:
  docker: true
  size: 2x 

definitions:
  services:
    docker:
      memory: 4096

pipelines:
  default:
    - step:
        name: 'BE deployment preparation'
        image: mcr.microsoft.com/dotnet/core/sdk:3.1-buster
        script:
          - dotnet restore "AspnetCore.React.Redux.Web.csproj"
          - dotnet build AspnetReactReduxTemplate.sln -c Release -o out

  branches:
    master:
      - step:
          name: 'BE deployment preparation'
          image: mcr.microsoft.com/dotnet/core/sdk:3.1-buster
          script:
            - dotnet restore "AspnetCore.React.Redux.Web.csproj"
            - dotnet build AspnetReactReduxTemplate.sln -c Release -o out
      #- step:
      #    name: "Adding versioned docker image"
      #    script:
      #      - pip3 install awscli
      #      - IMAGE=$DOCKER_REPO
      #      - TAG="$BITBUCKET_BRANCH-$BITBUCKET_COMMIT"
      #      - aws configure set aws_access_key_id "${AWS_ACCESS_KEY_ID}"
      #      - aws configure set aws_secret_access_key "${AWS_SECRET_ACCESS_KEY}"
      #      - eval $(aws ecr get-login --no-include-email --region ap-${AWS_DEFAULT_REGION} | sed 's;https://;;g')
      #      - docker login -u AWS -p $(aws ecr get-login-password --region ${AWS_DEFAULT_REGION}) ${DOCKER_REPO}
      #      - docker build -t  $IMAGE:$TAG .
      #      - docker push $IMAGE:$TAG
      - step:
          name: 'Docker image redeploy'
          script:
            - pip3 install awscli
            - IMAGE=$DOCKER_REPO
            - TAG="$BITBUCKET_BRANCH-$BITBUCKET_COMMIT"
            - aws configure set aws_access_key_id "${AWS_ACCESS_KEY_ID}"
            - aws configure set aws_secret_access_key "${AWS_SECRET_ACCESS_KEY}"
            - eval $(aws ecr get-login --no-include-email --region ap-${AWS_DEFAULT_REGION} | sed 's;https://;;g')
            - docker login -u AWS -p $(aws ecr get-login-password --region ${AWS_DEFAULT_REGION}) ${DOCKER_REPO}
            - docker build -t $IMAGE:latest .
            - docker push $IMAGE:latest
      - step:
          name: 'EBStalk deployment'
          deployment: test
          script:
            - pip3 install awscli
            - aws elasticbeanstalk update-environment --region ${AWS_DEFAULT_REGION} --application-name ${APPLICATION_NAME} --environment-name ${ENVIRONMENT_NAME} --version-label ${VERSION_NAME}