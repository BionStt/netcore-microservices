@if (Product.ProductVariants.Count == 0 && !IsProductSelected)
{
    <h4 class="not-available">Not available</h4>
}

@if (IsProductSelected)
{
    var variant = GetSelectedVariant(CurrentTypeId);
    
    @if (variant is not null && variant.OriginalPrice > variant.Price)
    {
        <h6 class="text-muted original-price">@variant.OriginalPrice</h6>
    }
        
    var productPrice = $"{(variant is not null ? $"${variant.Price}" : "")}";
    <ProductPrice Price="@productPrice" />
}
else
{
    <ProductPrice Price="@GetPriceText(Product)" />
}

@code {
    [Parameter]
    public Guid CurrentTypeId { get; set; }

    [Parameter]
    public Product Product { get; set; } = new();

    [Parameter]
    public bool IsProductSelected { get; set; }
    
    private string GetPriceText(Product product)
    {
        var variants = product.ProductVariants;

        switch (variants.Count)
        {
            case 0:
                return string.Empty;
                
            // only one variant
            case 1:
                return $"${variants[0].Price}";
            default: // more variant we calculate minimal price
            {
                var minPrice = variants.Min(v => v.Price);
                return $"Starting at ${minPrice}";
            }
        }
    }
    
    private ProductVariant? GetSelectedVariant(Guid currentTypeId)
    {
        var variant = Product.ProductVariants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);


        return variant;
    }
}